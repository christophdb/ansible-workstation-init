---
- hosts: localhost
  become: true
  gather_facts: true
  connection: local

  vars:
    actual_user: "{{ lookup('env', 'USER') }}"
  vars_files:
    - group_vars/all.yml

  pre_tasks:
  - name: User check
    assert:
      that:
        - actual_user != "root"
      fail_msg: "This playbook should not be run as root. Please use a non-root user with sudo privileges."

  - name: Distro check
    assert:
      that:
        - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Pop!_OS'
      fail_msg: "This role is only intended for Debian/Ubuntu systems"

  - name: Desktop check
    command: echo $XDG_CURRENT_DESKTOP
    register: desktop_env
    changed_when: false

  - name: Desktop check
    assert:
      that: "'gnome' in desktop_env.stdout.lower() or 'unity' in desktop_env.stdout.lower()"
      fail_msg: "The current desktop environment is neither GNOME nor Unity"
      success_msg: "This is a desktop environment"

  - name: Test sudo access via ansible.builtin.shell
    ansible.builtin.shell: "whoami"
    become: true
    register: sudo_test
    ignore_errors: yes

  - name: Validate sudo access
    ansible.builtin.assert:
      that:
        - "'root' in sudo_test.stdout"
      fail_msg: "Sudo authentication failed"
  
  # DEBUG MESSAGE
  #- name: user output
  #  debug:
  #    msg: "{{ actual_user }}"
    
  roles:
    - basic-folders-and-files
    - basic-tools
    - bluetooth-wifi
    - docker
    - firewall
    - flameshot
    - google-chrome
    - oh-my-zsh
    - seafile-client
    - teleport
    - vscode
    - role: desktop-customizing
      tags: ['customizing']
    - role: slides
      tags: ['slides']
    - role: fix-suspend
      tags: ['suspend']
    - role: brother-scanner
      tags: ['brother-scanner']
    - role: steam
      tags: ['steam']
    - role: vpn
      tags: ['vpn']
    - role: syncthing
      tags: ['syncthing']
    
  tasks:
  #- name: Stop the playbook
  #  meta: end_play

  - name: Last steps to finish your setup
    debug:
      msg: 
        - "Last steps are:"
        - "1. Create Accounts in Seafile Client"
        - "2. Save ssh-keys to ~/.ssh and chmod 600 ~/.ssh/*"
        - "3. Configure Thunderbird (Mail and Calendar)"
        - "4. Save Wireguard Configs to /etc/wireguard/"
        - "5. Reboot"

#  - name: add ansible user
#    user:
#      name: ansible
#      system: yes

#  - name: set up sudo for ansible user
#    copy:
#      src: files/sudoer_ansible
#      dest: /etc/sudoers.d/ansible
#      owner: root
#      group: root
#      mode: 0440

#  - name: add ansible-pull cronjob
#    cron:
#      name: ansible auto-provision
#      user: ansible
#      minute: "*/10"
#      job: ansible-pull -o -U https://github.com/christophdb/ansible_pull_workstation.git

